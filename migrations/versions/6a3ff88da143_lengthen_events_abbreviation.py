"""lengthen events.abbreviation

Revision ID: 6a3ff88da143
Revises: a485de8c06db
Create Date: 2019-11-19 18:22:20.111881

"""
# This is the first Alembic script that updates both local and remote databases
# 
from alembic import op
import sqlalchemy as sa
# added to give access to database engine type. If it's sqlite, use a different upgrade path
from config import Config


# revision identifiers, used by Alembic.
revision = '6a3ff88da143'
down_revision = 'a485de8c06db'
branch_labels = None
depends_on = None

if Config.SQLALCHEMY_DATABASE_URI[0:6]=='sqlite':
# if database to be upgraded is a sqlite database use batch update scripts
    def upgrade():
        with op.batch_alter_table('events') as batch:
            batch.alter_column('abbreviation',
                   type_ = sa.VARCHAR(length=10),
                   existing_type=sa.VARCHAR(length=3),
                   nullable=True)    


    def downgrade():
        # ### commands auto generated by Alembic - please adjust! ###
        with op.batch_alter_table('events') as batch:
            batch.alter_column('abbreviation',
                   type_ = sa.VARCHAR(length=3),
                   existing_type=sa.VARCHAR(length=10),
                   nullable=True)  
        
else:    
    def upgrade():
        # ### commands auto generated by Alembic - please adjust! ###
            op.alter_column('events', 'abbreviation',
                   type_ = sa.VARCHAR(length=10),
                   existing_type=sa.VARCHAR(length=3),
                   nullable=True)    # ### end Alembic commands ###


    def downgrade():
        # ### commands auto generated by Alembic - please adjust! ###
            op.alter_column('events', 'abbreviation',
               type_ = sa.VARCHAR(length=3),
               existing_type=sa.VARCHAR(length=10),
               nullable=True) 
        # ### end Alembic commands ###
